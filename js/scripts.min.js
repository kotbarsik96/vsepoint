const inittedInputs=[];function findInittedInput(t,n=!1){const e=Array.from(document.querySelectorAll(t));if(n){return inittedInputs.filter(i)||null}return inittedInputs.find(i)||null;function i(t){return e.includes(t.rootElem)}}function findInittedInputByFlag(t,n=!1){if(n){return inittedInputs.filter(e)}return inittedInputs.find(e);function e(n){return n.instanceFlag===t}}function createElement(t,n,e){let i=document.createElement(t);return n&&(i.className=n),e&&i.insertAdjacentHTML("afterbegin",e),i}let inittingSelectors=[{selector:".cookie",classInstance:Cookie},{selector:".resume__choose",classInstance:ChooseTabs},{selector:".resume__rubricks",classInstance:Rubricks},{selector:"#options",classInstance:Options}];function initInputs(){inittingSelectors.forEach((t=>{const n=t.selector,e=t.classInstance;Array.from(document.querySelectorAll(n)).filter((n=>!Boolean(inittedInputs.find((e=>e.rootElem===n&&e instanceof t.classInstance))))).forEach((t=>{inittedInputs.push(new e(t))}))}))}const inittingInputsBodyObserver=new MutationObserver((()=>{initInputs()}));inittingInputsBodyObserver.observe(document.body,{childList:!0,subtree:!0}),initInputs();